<?xml version="1.0"?>
<launch>





  <!--arg name="custom_rtabmap_param_file"   value="$(find robot_navigation)/config/rtabmap/rtabmap_default.yaml"/--> <!-- ADD -->
  <arg name="custom_rtabmap_param_file"   value="$(find robot_navigation)/config/rtabmap/rtabmap.yaml"/>              <!-- ADD -->



  <!-- Localization-only mode -->
  <!--arg name="localization"                               default="false"/-->
  <arg name="localization"                               default="false"/>
  <arg     if="$(arg localization)" name="rtabmap_args"  default=""/>
  <arg unless="$(arg localization)" name="rtabmap_args"  default="--delete_db_on_start"/>

  <!--arg name="rgbd_odometry"                              default="false"/-->

  <arg name="wait_for_transform_duration"  default="0.2"/> 

  <!-- 3D Sensor(s) -->

  <!--arg name="3d_sensor" default="$(env TURTLEBOT_3D_SENSOR)" /-->
  <arg name="3d_sensor"            default="D435" />
  <!--arg name="3d_sensor"            default="ZR300" /-->


  <arg name="scan_topic"           default="/scan" /> 
  <arg name="grid_map_topic"       default="/map"/>    <!-- new add, Mapping Occupancy grid generated with laser scans -->


  <arg name="database_path"        default="~/Documents/RTAB-Map/rtabmap.db" />                                   <!-- ADD -->
  <arg name="rviz_cfg"             default="$(find robot_navigation)/rviz/rtabmap_turtlebot_navigation.rviz" />   <!-- ADD -->

  <include file="$(find turtlebot_navigation)/launch/includes/move_base.launch.xml"/>



  <include file="$(find robot_navigation)/launch/includes/rtabmap_default.launch.xml">
    <arg name="database_path"            value="$(arg database_path)"/>       <!-- ADD -->
    <arg name="localization"             value="$(arg localization)" />
    <arg name="rtabmap_args"             value="$(arg rtabmap_args)" /> 
    <arg name="custom_param_file"        value="$(arg custom_rtabmap_param_file)"/>
    <arg name="frame_id"                 value="base_footprint"/>     <!-- Fixed frame id, you may set "base_link" or "base_footprint" if they are published -->

    <arg name="wait_for_transform"  value="$(arg wait_for_transform_duration)"/>



  <!-- RGB-D related topics -->

  <arg if="$(eval arg('3d_sensor') == 'ZR300')" name="rgb_topic"         value="/ZR300/rgb/image_rect_color"/>
  <arg if="$(eval arg('3d_sensor') == 'ZR300')" name="depth_topic"       value="/ZR300/depth_registered/sw_registered/image_rect_raw"/>
  <arg if="$(eval arg('3d_sensor') == 'ZR300')" name="camera_info_topic" value="/ZR300/rgb/camera_info"/>

  <arg if="$(eval arg('3d_sensor') == 'D435')"  name="rgb_topic"         value="/D435/color/image_raw"/>
  <arg if="$(eval arg('3d_sensor') == 'D435')"  name="depth_topic"       value="/D435/aligned_depth_to_color/image_raw"/>
  <arg if="$(eval arg('3d_sensor') == 'D435')"  name="camera_info_topic" value="/D435/color/camera_info"/>
  <!--arg name="approx_sync"           value="false"/-->

  <arg name="visual_odometry"          default="false"/>          <!--false  Launch rtabmap visual odometry node -->



  <!-- When sending goals on /rtabmap/goal topic, use actionlib to communicate with move_base --> 
  <arg name="use_action_for_goal"        default="true" />              <!-- new ADD -->
  <arg name="move_base"        default="/move_base" />        <!-- new ADD -->

  <arg name="odom_frame_id"    value="odom"/><!--The frame attached to odometry. If empty, rtabmap will subscribe to odom topic to get odometry. If set, odometry is got from tf (in this case, a covariance of 1 is used)-->
  <arg name="odom_topic"       default="/odom"/>          <!-- Odometry topic name -->

  <!-- Fix odom covariance as in simulation the covariance in /odom topic is high (0.1 for linear and 0.05 for angular) -->
  <!--param unless="$(arg rgbd_odometry)" name="odom_tf_linear_variance" value="0.001"/-->
  <!--param unless="$(arg rgbd_odometry)" name="odom_tf_angular_variance" value="0.001"/-->


  <arg name="subscribe_scan"          default="true"/>
  <arg name="scan_topic"              default="$(arg scan_topic)"/>

  <!-- output -->
  <arg name="grid_map_topic"                value="$(arg grid_map_topic)"/>        <!-- new ADD, Mapping Occupancy grid generated with laser scans -->


  <!-- Choose visualization -->
  <arg name="rtabmapviz"              default="false" /> 
  <arg name="rviz"                    default="true" />
  <arg name="rviz_cfg"                value="$(arg rviz_cfg)" />

  </include>



</launch>
