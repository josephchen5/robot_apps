<?xml version="1.0"?>
<launch>

  <arg name="gui_cfg"                 default="$(find robot_navigation)/config/rtabmap/rtabmap_gui.ini" />     <!-- ADD -->
  <arg name="database_path"           default="~/Documents/RTAB-Map/rtabmap.db" />                             <!-- ADD -->
  <arg name="rviz_cfg"                default="$(find robot_navigation)/rviz/robot_navigation_app0625.rviz" /> <!-- ADD -->


  <arg name="config_file"                           default="$(find robot_navigation)/config/rtabmap/rgbd_odom_2dscan_config.yaml"/>    <!-- ADD  --> 
  <arg name="robust_graph_optimization_param_file"  default="$(find robot_navigation)/config/rtabmap/use_D435_and_2Dlidar_test.yaml"/>    <!-- ADD  --> 
  <arg name="orb_config_file"                       default="$(find robot_navigation)/config/rtabmap/orb_config.yaml"/>    <!-- ADD  --> 

 
  <!-- Choose visualization -->
  <arg name="rtabmapviz"              default="true" /> 
  <arg name="rviz"                    default="false" />
  
  <!-- Localization-only mode -->
  <arg name="localization"            default="false"/>
  
  <!-- sim time for convenience, if playing a rosbag -->
  <arg name="use_sim_time"            default="false"/>
  <param if="$(arg use_sim_time)" name="use_sim_time" value="true"/>
  
  <!-- Corresponding config files -->
  <arg name="cfg"                     default="" /> <!-- To change RTAB-Map's parameters, set the path of config file (*.ini) generated by the standalone app -->
  <arg name="publish_tf"              default="true" />    <!-- new ADD -->

 
  <!-- RGB-D related topics -->
  <arg name="camera2"              			default="d400"/>		<!-- Note: Replace with camera name -->
  <arg name="rgb_topic"               default="/$(arg camera2)/color/image_raw"/>
  <arg name="depth_topic"             default="/$(arg camera2)/aligned_depth_to_color/image_raw" />
  <arg name="camera_info_topic"       default="/$(arg camera2)/color/camera_info" />
  <arg name="depth_camera_info_topic" default="$(arg camera_info_topic)" />
  <!--arg name="depth_camera_info_topic" default="/$(arg camera2)/aligned_depth_to_color/camera_info"/-->



  <arg name="scan_topic"              default="/front/scan"/>
  <arg name="scan_cloud_topic"        default="/scan_cloud"/>
  <arg name="odom_topic"              default="/odometry/filtered"/>         <!-- odometry/filtered  Odometry topic name -->
  <arg name="imu_topic"                default=""/>          <!--/imu/data  only used with VIO approaches --> 
  <arg name="gps_topic"                default="/gps/fix" />          <!-- gps async subscription -->

  <arg name="move_base"                default="/move_base" />        <!-- new ADD -->
  <arg name="grid_map_topic"           default="/map"/>    <!--ADD turtlebot, Mapping Occupancy grid generated with laser scans -->
  <arg name="use_action_for_goal"      default="true" />                        <!-- new ADD turtlebot-->
  
  <arg name="wait_for_transform"      default="0.2"/>
  <arg name="queue_size"              default="10"/>


  <arg name="namespace"               default="rtabmap"/>
  <arg name="launch_prefix"           default=""/>              <!-- for debugging purpose, it fills launch-prefix tag of the nodes -->
  <arg name="output"                  default="screen"/>        <!-- Control node output (screen or log) -->


  <!-- Nodes -->
  <group ns="$(arg namespace)">  

    <!-- Visual SLAM (robot side) -->
    <!-- args: "delete_db_on_start" and "udebug" -->

    <arg     if="$(arg localization)" name="rtabmap_args"  default=""/>
    <arg unless="$(arg localization)" name="rtabmap_args"  default="--delete_db_on_start"/>

    <node name="rtabmap" pkg="rtabmap_ros" type="rtabmap" output="$(arg output)" args="$(arg rtabmap_args)" launch-prefix="$(arg launch_prefix)">


      <rosparam file="$(arg config_file)"                    command="load" />              <!-- new ADD -->
                                     <!-- RTAB-Map's parameters -->
      <rosparam file="$(arg robust_graph_optimization_param_file)" command="load" />         <!-- new new ADD -->
      <!--rosparam file="$(arg orb_config_file)"                      command="load" /-->         <!-- new new ADD -->


                
      <param name="Rtabmap/DetectionRate"          type="double"  value="10"/>  <!--1 Detection rate (Hz). RTAB-Map will filter input images to satisfy this rate. -->
                
                                     <!-- sensore topics -->
      <remap from="rgb/image"          to="$(arg rgb_topic)"/>
      <remap from="depth/image"        to="$(arg depth_topic)"/>
      <remap from="rgb/camera_info"    to="$(arg camera_info_topic)"/>
      <remap from="scan"                   to="$(arg scan_topic)"/>
      <remap from="scan_cloud"             to="$(arg scan_cloud_topic)"/>
      <remap from="gps/fix"                to="$(arg gps_topic)"/>
      <remap from="odom"                   to="$(arg odom_topic)"/>
      <!--remap from="imu"                    to="$(arg imu_topic)"/-->     <!-- only used with VIO approaches -->

      <remap from="grid_map"               to="$(arg grid_map_topic)"/>      <!-- new ADD, Mapping Occupancy grid generated with laser scans -->
      <remap from="move_base"              to="$(arg move_base)"/>           <!-- new ADD -->
      <param name="use_action_for_goal"    type="bool"        value="$(arg use_action_for_goal)"/>      <!-- new ADD -->
      <param name="publish_tf"             type="bool"        value="$(arg publish_tf)"/>                <!-- new ADD -->

      <param name="scan_normal_k"          type="int" value="0"/>


      <param name="wait_for_transform_duration"  type="double"   value="$(arg wait_for_transform)"/>
      <param name="queue_size"           type="int" value="$(arg queue_size)"/>

      <param name="database_path"        type="string" value="$(arg database_path)"/>
      <param name="ground_truth_frame_id"       type="string" value=""/>  <!-- e.g., "world" -->
      <param name="ground_truth_base_frame_id"  type="string" value=""/>   <!-- e.g., "tracker", a fake frame matching the frame "frame_id" (but on different TF tree) -->

      <param name="odom_tf_angular_variance"    type="double" value="1"/>  <!-- If TF is used to get odometry, this is the default angular variance -->
      <param name="odom_tf_linear_variance"     type="double" value="1"/>  <!-- If TF is used to get odometry, this is the default linear variance -->

      <param name="Odom/KalmanProcessNoise"       type="double" value="0.001"/>  <!--default  0.001 -->
      <param name="Odom/KalmanMeasurementNoise"    type="double" value="0.01"/>  <!--default  0.01-->
      <param name="Odom/ParticleLambdaT"         type="double" value="0.002"/>  <!--default  0.002-->
      <param name="Odom/ParticleNoiseR"          type="double" value="0.002"/>  <!--default  0.002-->

      <param name="OdomF2M/ScanSubtractRadius"          type="double" value="0.05"/>  <!--default  0.05-->
      <param name="OdomF2M/ScanSubtractAngle"          type="double" value="45"/>     <!--default 45-->


      <param name="odom_sensor_sync"         type="bool"   value="false"/>

      <param name="config_path"          type="string" value=""/>  <!-- To change RTAB-Map's parameters, set the path of config file (*.ini) generated by the standalone app -->

      <param name="landmark_linear_variance"   type="double" value="0.0001"/>
      <param name="landmark_angular_variance"  type="double" value="9999"/>   <!-- >=9999 means ignore rotation in optimization, when rotation estimation of the tag is not reliable -->    
      
      <remap from="rgbd_image"             to="rgbd_image_relay"/>
      <remap from="user_data"              to="/user_data"/>
      <remap from="user_data_async"        to="/user_data_async"/> <!-- user data async subscription (rate should be lower than map update rate) -->
      <remap from="tag_detections"         to="/tag_detections"/>  <!-- apriltags async subscription -->


      <!-- localization mode -->
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
      <param name="Mem/InitWMWithAllNodes" type="string" value="$(arg localization)"/>
    </node>
  
    <!-- Visualisation RTAB-Map -->
    <node if="$(arg rtabmapviz)" pkg="rtabmap_ros" type="rtabmapviz" name="rtabmapviz" args="-d $(arg gui_cfg)" output="$(arg output)" launch-prefix="$(arg launch_prefix)">
      <rosparam file="$(arg config_file)"                    command="load" />              <!-- new ADD -->   

      <param name="wait_for_transform_duration" type="double"   value="$(arg wait_for_transform)"/>
      <param name="queue_size"           type="int"    value="$(arg queue_size)"/>
    
      <remap from="rgb/image"       to="$(arg rgb_topic)"/>
      <remap from="depth/image"     to="$(arg depth_topic)"/>
      <remap from="rgb/camera_info" to="$(arg camera_info_topic)"/>
      
      <remap from="rgbd_image"      to="rgbd_image_relay"/>      
      <remap from="scan"                   to="$(arg scan_topic)"/>
      <remap from="scan_cloud"             to="$(arg scan_cloud_topic)"/>
      <remap from="odom"                   to="$(arg odom_topic)"/>
    </node>
  
  </group>
  
  <!-- Visualization RVIZ -->
  <node if="$(arg rviz)" pkg="rviz" type="rviz" name="rviz" args="-d $(arg rviz_cfg)"/>
  <node if="$(arg rviz)" pkg="nodelet" type="nodelet" name="points_xyzrgb" args="standalone rtabmap_ros/point_cloud_xyzrgb" output="$(arg output)">

    <remap from="rgb/image"         to="$(arg rgb_topic)"/>
    <remap from="depth/image"       to="$(arg depth_topic)"/>
    <remap from="rgb/camera_info"   to="$(arg camera_info_topic)"/>
    <remap from="rgbd_image"      to="rgbd_image_relay"/>

    <remap from="cloud"             to="voxel_cloud" />

    <param name="decimation"  type="double" value="4"/>
    <param name="voxel_size"  type="double" value="0.0"/>
    <param name="approx_sync" type="bool"   value="true"/>
  </node>

</launch>
